{
    "appid": "7392d06f-b2b7-47f3-a0f5-80d508826619",
    "name": "MalwareBazaar",
    "description": "This app integrates with MalwareBazaar from abuse.ch to provide investigative actions",
    "type": "information",
    "product_vendor": "abuse.ch",
    "logo": "logo_malwarebazaar.svg",
    "logo_dark": "logo_malwarebazaar_dark.svg",
    "product_name": "MalwareBazaar",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Splunk Community",
    "license": "Copyright (c) 2021 Splunk Inc.",
    "app_version": "1.0.1",
    "utctime_updated": "2021-04-16T21:56:54.000000Z",
    "package_name": "phantom_malwarebazaar",
    "main_module": "malwarebazaar_connector.py",
    "min_phantom_version": "4.9.39220",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "description": "Base URL for MalwareBazaar",
            "data_type": "string",
            "required": true,
            "default": "https://mb-api.abuse.ch/api/v1/",
            "order": 0
        },
        "api_key": {
            "description": "API key from MalwareBazaar",
            "data_type": "password",
            "order": 1
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get file info",
            "identifier": "get_file_info",
            "description": "Query the MalwareBazaar API for the corresponding hash",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "hash": {
                    "description": "Hash to query for",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "hash",
                        "sha256",
                        "md5",
                        "sha1"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.hash",
                    "data_type": "string",
                    "contains": [
                        "hash",
                        "sha256",
                        "md5",
                        "sha1"
                    ],
                    "column_name": "Hash",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.comment",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file_name",
                    "data_type": "string",
                    "column_name": "File Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.file_size",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.file_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file_type_mime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.first_seen",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.imphash",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.last_seen",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.md5_hash",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.origin_country",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.reporter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sha1_hash",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.signature",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tlsh",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get file",
            "identifier": "get_file",
            "description": "Fetch malware sample from MalwareBazaar and store in vault",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "hash": {
                    "description": "SHA256 hash to fetch the file for",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "sha256",
                        "hash"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.hash",
                    "data_type": "string",
                    "contains": [
                        "sha256",
                        "hash"
                    ],
                    "column_name": "Hash",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}