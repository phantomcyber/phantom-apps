{
    "appid": "7d06523f-d524-4dbd-befd-7f30f5492882",
    "name": "AWS IAM",
    "description": "This app integrates with Amazon Web Services Identity Access Management (AWS IAM) to support various containment, corrective and investigate actions",
    "type": "identity management",
    "product_vendor": "AWS",
    "logo": "logo_aws.svg",
    "logo_dark": "logo_aws_dark.svg",
    "product_name": "AWS Identity Access Management",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) 2018-2020 Splunk Inc.",
    "app_version": "2.0.1",
    "utctime_updated": "2020-12-22T12:31:35.000000Z",
    "package_name": "phantom_awsiam",
    "python_version": "3",
    "main_module": "awsiam_connector.py",
    "min_phantom_version": "4.9.39220",
    "latest_tested_versions": [
        "Cloud, December 15 2020"
    ],
    "app_wizard_version": "1.0.0",
    "configuration": {
        "access_key": {
            "description": "Access key ID",
            "data_type": "password",
            "required": true,
            "order": 0
        },
        "secret_key": {
            "description": "Secret access key",
            "data_type": "password",
            "required": true,
            "order": 1
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get user",
            "identifier": "get_user",
            "description": "Get details of all the groups and attached policies for the user",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.AttachedPolicies.*.PolicyArn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:policy/testPolicy"
                    ],
                    "contains": [
                        "aws iam policy arn"
                    ]
                },
                {
                    "data_path": "action_result.data.*.AttachedPolicies.*.PolicyName",
                    "data_type": "string",
                    "example_values": [
                        "testPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.AttachedPolicies.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-12ab-ab12-ab12-abcdef123456"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Groups.*.Arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:group/Test-Group"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Groups.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2018-05-01T16:44:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Groups.*.GroupId",
                    "data_type": "string",
                    "example_values": [
                        "ABCDEFGHI1234567890"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Groups.*.GroupName",
                    "data_type": "string",
                    "example_values": [
                        "Test-Group"
                    ],
                    "contains": [
                        "aws iam group name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Groups.*.Path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testrepo/",
                        "/resource_management/test/"
                    ],
                    "contains": [
                        "aws iam group path"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Groups.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-12ab-ab12-abcdef123456"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_groups",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.summary.total_policies",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total policies: 2, Total groups: 2"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "custom",
                "view": "awsiam_view.display_view"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list groups",
            "identifier": "list_groups",
            "description": "List groups of AWS IAM",
            "verbose": "By default groups from path '/' are fetched.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "group_path": {
                    "description": "Group path in AWS IAM",
                    "data_type": "string",
                    "default": "/",
                    "primary": true,
                    "contains": [
                        "aws iam group path"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.group_path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testrepo/",
                        "/resource_management/test/"
                    ],
                    "contains": [
                        "aws iam group path"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:group/Test-Group"
                    ],
                    "column_name": "Group ARN",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2018-05-01T16:44:05Z"
                    ],
                    "column_name": "Creation Date",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.GroupId",
                    "data_type": "string",
                    "example_values": [
                        "ABCDEFGHI1234567890"
                    ],
                    "column_name": "Group ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.GroupName",
                    "data_type": "string",
                    "example_values": [
                        "Test-Group"
                    ],
                    "contains": [
                        "aws iam group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.Path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testrepo/",
                        "/resource_management/test/"
                    ],
                    "contains": [
                        "aws iam group path"
                    ],
                    "column_name": "Group Path",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1232-ab12-12ab-ab12-abcd1234"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_groups",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total groups: 4"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list users",
            "identifier": "list_users",
            "description": "List users of AWS IAM",
            "verbose": "If both parameters are provided, users belonging to specified group and to specified path are fetched. If only user path or group name is provided, users belonging to specified path or group respectively are fetched. If no parameters are provided, users belonging to default user path '/' are fetched.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "user_path": {
                    "description": "Path of the user",
                    "data_type": "string",
                    "default": "/",
                    "primary": true,
                    "contains": [
                        "aws iam user path"
                    ],
                    "order": 0
                },
                "group_name": {
                    "description": "Group name",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "aws iam group name"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "Test-Group"
                    ],
                    "contains": [
                        "aws iam group name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.user_path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testrepo/",
                        "/resource_management_users/test/"
                    ],
                    "contains": [
                        "aws iam user path"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:user/testUser"
                    ]
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2018-06-01T18:51:57Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.PasswordLastUsed",
                    "data_type": "string",
                    "example_values": [
                        "2018-08-01T09:09:10Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testrepo/",
                        "/resource_management_users/test/"
                    ],
                    "contains": [
                        "aws iam user path"
                    ]
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-abcdef123456"
                    ]
                },
                {
                    "data_path": "action_result.data.*.UserId",
                    "data_type": "string",
                    "example_values": [
                        "ABCDEFGHI1234567890"
                    ]
                },
                {
                    "data_path": "action_result.data.*.UserName",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_users",
                    "data_type": "numeric",
                    "example_values": [
                        10
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total users: 10"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "custom",
                "view": "awsiam_view.display_view"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list roles",
            "identifier": "list_roles",
            "description": "List roles available in AWS IAM",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:role/user-role-ExecutionRole"
                    ],
                    "column_name": "Role ARN",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.AssumeRolePolicyDocument",
                    "data_type": "string",
                    "example_values": [
                        "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"support.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
                    ],
                    "contains": [
                        "aws iam role policy doc"
                    ],
                    "column_name": "Role Policy Document",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2018-05-01T20:22:38Z"
                    ],
                    "column_name": "Creation Date",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.Description",
                    "data_type": "string",
                    "example_values": [
                        "Ready only access for Redlock to do its thing and generate test data."
                    ],
                    "column_name": "Description",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.MaxSessionDuration",
                    "data_type": "string",
                    "example_values": [
                        "2700"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testrepo/",
                        "/test-role-path/role-test-path/"
                    ],
                    "contains": [
                        "aws iam role path"
                    ],
                    "column_name": "Role Path",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ]
                },
                {
                    "data_path": "action_result.data.*.RoleId",
                    "data_type": "string",
                    "example_values": [
                        "ABCDEFGHI1234567890"
                    ],
                    "column_name": "Role ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RoleName",
                    "data_type": "string",
                    "example_values": [
                        "user-role-ExecutionRole"
                    ],
                    "contains": [
                        "aws iam role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary.total_roles",
                    "data_type": "numeric",
                    "example_values": [
                        11
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total roles: 11"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add user",
            "identifier": "add_user",
            "description": "Add user to a group",
            "type": "correct",
            "undo": "remove user",
            "read_only": false,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                },
                "group_name": {
                    "description": "Group name",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam group name"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "Test-Group"
                    ],
                    "contains": [
                        "aws iam group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "123456ab-abcd-1234-ab12-abcdef1234"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "User testUser successfully added to the group Test-Group"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove user",
            "identifier": "remove_user",
            "description": "Remove user from a group",
            "type": "contain",
            "undo": "add user",
            "read_only": false,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                },
                "group_name": {
                    "description": "Group name",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam group name"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "Test-Group"
                    ],
                    "contains": [
                        "aws iam group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "123abcde-abcd-ab34-12cd-12345abcdef"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "User testUser successfully removed from the group Test-Group"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete user",
            "identifier": "delete_user",
            "description": "Delete user from AWS IAM account",
            "verbose": "Delete user and user profile as well as all its associations with groups, policies, and access keys from AWS IAM account.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-aa11-bb11-cc11-123456abcdef"
                    ],
                    "column_name": "Request ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "User testUser deleted successfully along with all its associations with login profile, access keys, groups, and policies"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "disable user",
            "identifier": "disable_user",
            "description": "Disable login profile and access keys of a user",
            "verbose": "If disable access keys parameter is marked false, only login profile is disabled. By default both are disabled.",
            "type": "contain",
            "undo": "enable user",
            "read_only": false,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                },
                "disable_access_keys": {
                    "description": "Disable access keys",
                    "data_type": "boolean",
                    "default": true,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.disable_access_keys",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ],
                    "column_name": "Disable Access Keys",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-1234abcde"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "User testUser disabled successfully"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "enable user",
            "identifier": "enable_user",
            "description": "Enable login profile and access keys of a user",
            "verbose": "If enable access keys parameter is marked false, only login profile is enabled. By default both are enabled. If this action is being executed on an already enabled user then other parameters won't affect the action run. <p class=\"warn\">Please exercise caution when using this action. The password may be kept and logged in clear text.</p>",
            "type": "correct",
            "undo": "disable user",
            "read_only": false,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                },
                "password": {
                    "description": "Password",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "enable_access_keys": {
                    "description": "Enable access keys of user along with login profile",
                    "data_type": "boolean",
                    "default": true,
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.enable_access_keys",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ],
                    "column_name": "Enable Access Keys",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.password",
                    "data_type": "string",
                    "example_values": [
                        "testpassword"
                    ]
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2018-08-01T13:45:43Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.PasswordResetRequired",
                    "data_type": "string",
                    "example_values": [
                        "false",
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "aa216400-a611-11e8-aeae-a514954ff620"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.UserName",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "User testUser enabled successfully"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add role",
            "identifier": "add_role",
            "description": "Add new role in AWS IAM account",
            "verbose": "Creation of role is a 3 step process. First instance profile is created with the provided role name, then role is created with the same name, and finally the created role is attached with the instance profile created earlier. <p class=\"warn\">Please exercise caution when using this action. Special characters are not allowed in parameter role path.</p>",
            "type": "generic",
            "undo": "remove role",
            "read_only": false,
            "parameters": {
                "role_name": {
                    "description": "Role name",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam role name"
                    ],
                    "order": 0
                },
                "role_policy_document": {
                    "description": "JSON string mentioning trust relationship policy document with the role",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam role policy doc"
                    ],
                    "order": 1
                },
                "role_path": {
                    "description": "Path to the role",
                    "data_type": "string",
                    "default": "/",
                    "primary": true,
                    "contains": [
                        "aws iam role path"
                    ],
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.role_name",
                    "data_type": "string",
                    "example_values": [
                        "testRole"
                    ],
                    "contains": [
                        "aws iam role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.role_path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testRoles/",
                        "/testRoles/testRolePath/"
                    ],
                    "contains": [
                        "aws iam role path"
                    ],
                    "column_name": "Role Path",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.role_policy_document",
                    "data_type": "string",
                    "example_values": [
                        "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}"
                    ],
                    "contains": [
                        "aws iam role policy doc"
                    ],
                    "column_name": "Role Policy Document",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.Arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:role/test-Role"
                    ],
                    "column_name": "Role ARN",
                    "column_order": "3"
                },
                {
                    "data_path": "action_result.data.*.AssumeRolePolicyDocument",
                    "data_type": "string",
                    "example_values": [
                        "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}"
                    ],
                    "contains": [
                        "aws iam role policy doc"
                    ]
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2018-08-01T11:45:20Z"
                    ],
                    "column_name": "Creation Date",
                    "column_order": "4"
                },
                {
                    "data_path": "action_result.data.*.Path",
                    "data_type": "string",
                    "example_values": [
                        "/",
                        "/testRoles/",
                        "/testRoles/testRolePath/"
                    ],
                    "contains": [
                        "aws iam role path"
                    ]
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-1234abcde"
                    ],
                    "column_name": "Request ID",
                    "column_order": "6"
                },
                {
                    "data_path": "action_result.data.*.RoleId",
                    "data_type": "string",
                    "example_values": [
                        "ABCDEFGHIJKL12345678"
                    ],
                    "column_name": "Role ID",
                    "column_order": "0"
                },
                {
                    "data_path": "action_result.data.*.RoleName",
                    "data_type": "string",
                    "example_values": [
                        "test-Role"
                    ],
                    "contains": [
                        "aws iam role name"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Role testRole successfully added in AWS account"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove role",
            "identifier": "remove_role",
            "description": "Remove role from AWS IAM account",
            "verbose": "Remove role and role instance profiles along with associations of role with all attached policies.",
            "type": "generic",
            "undo": "add role",
            "read_only": false,
            "parameters": {
                "role_name": {
                    "description": "Role name",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam role name"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.role_name",
                    "data_type": "string",
                    "example_values": [
                        "test-Role"
                    ],
                    "contains": [
                        "aws iam role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-1234abcde"
                    ],
                    "column_name": "Request ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Role test-Role removed successfully along with all its associations with login instance profiles and policies"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "attach policy",
            "identifier": "attach_policy",
            "description": "Attach managed policy to a role",
            "type": "correct",
            "undo": "detach policy",
            "read_only": false,
            "parameters": {
                "role_name": {
                    "description": "Role name",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam role name"
                    ],
                    "order": 0
                },
                "policy_arn": {
                    "description": "Policy ARN",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.policy_arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:policy/testPolicy"
                    ],
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "column_name": "Policy ARN",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.role_name",
                    "data_type": "string",
                    "example_values": [
                        "test-Role"
                    ],
                    "contains": [
                        "aws iam role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-1234abcde"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Policy with ARN arn:aws:iam::123456789012:policy/testPolicy successfully attached with role test-Role"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "detach policy",
            "identifier": "detach_policy",
            "description": "Detach managed policy from a role",
            "type": "contain",
            "undo": "attach policy",
            "read_only": false,
            "parameters": {
                "role_name": {
                    "description": "Role name",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam role name"
                    ],
                    "order": 0
                },
                "policy_arn": {
                    "description": "Policy ARN",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.policy_arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:policy/testPolicy"
                    ],
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "column_name": "Policy ARN",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.role_name",
                    "data_type": "string",
                    "example_values": [
                        "test-Role"
                    ],
                    "contains": [
                        "aws iam role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-1234abcde"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Policy with ARN arn:aws:iam::123456789012:policy/testPolicy successfully detached from role test-Role"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "assign policy",
            "identifier": "assign_policy",
            "description": "Assign managed policy to the user",
            "type": "correct",
            "undo": "remove policy",
            "read_only": false,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                },
                "policy_arn": {
                    "description": "Policy ARN",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.policy_arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:policy/testpolicy"
                    ],
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "column_name": "Policy ARN",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-1234abcde"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Policy with ARN arn:aws:iam::1234567890:policy/testPolicy successfully assigned to user testUser"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove policy",
            "identifier": "remove_policy",
            "description": "Remove managed policy association with the user",
            "type": "contain",
            "undo": "assign policy",
            "read_only": false,
            "parameters": {
                "username": {
                    "description": "Username",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "order": 0
                },
                "policy_arn": {
                    "description": "Policy ARN",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.policy_arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:policy/testPolicy"
                    ],
                    "contains": [
                        "aws iam policy arn"
                    ],
                    "column_name": "Policy ARN",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "example_values": [
                        "testUser"
                    ],
                    "contains": [
                        "user name",
                        "aws iam user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "abcd1234-ab12-ab12-ab12-1234abcde"
                    ],
                    "column_name": "Request ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Policy with ARN arn:aws:iam::123456789012:policy/testPolicy successfully removed from user testUser"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}