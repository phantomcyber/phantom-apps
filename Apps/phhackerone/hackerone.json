{
    "appid": "2ab1b33f-1951-4dbd-862b-8347e511a6d5",
    "name": "HackerOne",
    "description": "This app integrates with HackerOne to support various generic and investigative actions",
    "publisher": "Splunk Community",
    "type": "generic",
    "main_module": "hackerone_connector.pyc",
    "app_version": "1.5.0",
    "utctime_updated": "2020-01-28T00:00:00.000000Z",
    "package_name": "phantom_hackerone",
    "product_vendor": "HackerOne",
    "product_name": "HackerOne",
    "product_version_regex": ".*",
    "min_phantom_version": "4.8.24304",
    "logo": "logo_hackerone.svg",
    "logo_dark": "logo_hackerone_dark.svg",
    "license": "Copyright (c) 2020 Splunk Inc.",
    "configuration": {
        "api_identifier": {
            "description": "HackerOne Identifier",
            "data_type": "string",
            "order": 0,
            "required": true
        },
        "api_token": {
            "description": "HackerOne API Token",
            "data_type": "password",
            "order": 1,
            "required": true
        },
        "program_name": {
            "description": "HackerOne Program Name",
            "data_type": "string",
            "order": 2,
            "required": true
        },
        "state_filter": {
            "description": "Filter for report state (to be used when polling)",
            "data_type": "string",
            "order": 3
        },
        "assignment_filter": {
            "description": "Filter for report assignment (to be used when polling)",
            "data_type": "string",
            "order": 4
        },
        "full_comments": {
            "description": "Collect comments for reports (to be used when polling, much slower)",
            "data_type": "boolean",
            "order": 5
        },
        "phantom_api_token": {
            "description": "Phantom API token for updating existing containers",
            "data_type": "password",
            "order": 6,
            "required": true
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity using supplied credentials",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get report",
            "description": "Get a report by ID",
            "type": "investigate",
            "identifier": "get_report",
            "read_only": true,
            "parameters": {
                "report_id": {
                    "description": "ID of report to get",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "hackerone report id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.report_id",
                    "data_type": "string",
                    "contains": [
                        "hackerone report id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "column_name": "ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.reporter_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.reporter_name",
                    "data_type": "string",
                    "column_name": "Reporter Name",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.reporter_username",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.reporter_reputation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.assignee_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.assignee_name",
                    "data_type": "string",
                    "column_name": "Assignee Name",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.assignee_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.program_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.program_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_rating",
                    "data_type": "string",
                    "column_name": "Severity Rating",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.severity_author_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_user_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_score",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_attack_complexity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_attack_vector",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_availability",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_confidentiality",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_integrity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_privileges_required",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_user_interaction",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_scope",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity_cvf",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.weakness_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.weakness_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.weakness_external_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attachments",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.comments",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string",
                    "column_name": "Title",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.state",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.created_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.closed_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.last_reporter_activity_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.first_program_activity_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.last_program_activity_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.bounty_awarded_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.swag_awarded_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.disclosed_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.reporter_agreed_on_going_public_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.issue_tracker_reference_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.issue_tracker_reference_url",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.last_public_activity_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.last_activity_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.cve_ids",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get reports",
            "description": "Get HackerOne reports",
            "type": "investigate",
            "identifier": "get_reports",
            "read_only": true,
            "parameters": {
                "state_filter": {
                    "description": "Report State Filter",
                    "data_type": "string",
                    "order": 0

                },
                "assignment_filter": {
                    "description": "Report Assignment Filter",
                    "data_type": "string",
                    "order": 1
                },
                "full_comments": {
                    "description": "Collect comments for reports (much slower)",
                    "data_type": "boolean",
                    "order": 2,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.state_filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.assignment_filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.full_comments",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.reports",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.count",
                    "data_type": "numeric",
                    "column_name": "Count",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get updated reports",
            "description": "Get updated HackerOne reports",
            "type": "investigate",
            "identifier": "get_updated_reports",
            "read_only": true,
            "parameters": {
                "state_filter": {
                    "description": "Report State Filter",
                    "data_type": "string",
                    "order": 0
                },
                "assignment_filter": {
                    "description": "Report Assignment Filter",
                    "data_type": "string",
                    "order": 1
                },
                "full_comments": {
                    "description": "Collect comments for reports (much slower)",
                    "data_type": "boolean",
                    "order": 2,
                    "required": true
                },
                "range": {
                    "description": "How many minutes back to get changed reports from",
                    "data_type": "numeric",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.state_filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.assignment_filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.full_comments",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.range",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.reports",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.count",
                    "data_type": "numeric",
                    "column_name": "Count",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "update tracking id",
            "description": "Update HackerOne report with tracking ID",
            "type": "generic",
            "identifier": "update_id",
            "read_only": false,
            "parameters": {
                "report_id": {
                    "description": "ID of report to update",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "hackerone report id"
                    ]
                },
                "tracking_id": {
                    "description": "ID of tracking ticket",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.report_id",
                    "data_type": "string",
                    "contains": [
                        "hackerone report id"
                    ],
                    "column_name": "Report ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.tracking_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unassign report",
            "description": "Unassign HackerOne report with tracking ID",
            "type": "generic",
            "identifier": "unassign",
            "read_only": false,
            "parameters": {
                "report_id": {
                    "description": "ID of report to unassign",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "hackerone report id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.report_id",
                    "data_type": "string",
                    "contains": [
                        "hackerone report id"
                    ],
                    "column_name": "Report ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Consume HackerOne reports and generate containers for them",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        }
    ]
}