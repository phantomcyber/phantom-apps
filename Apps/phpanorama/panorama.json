{
    "appid": "3d88e427-0e61-4311-a613-bbddeac532e0",
    "name": "Panorama",
    "description": "This app integrates with the Palo Alto Networks Panorama product to support several containment and investigative actions",
    "publisher": "Splunk",
    "type": "firewall",
    "main_module": "panorama_connector.py",
    "app_version": "2.0.0",
    "utctime_updated": "2018-12-07T01:35:49.000000Z",
    "package_name": "phantom_panorama",
    "product_vendor": "Palo Alto Networks",
    "product_name": "Panorama",
    "product_version_regex": ".*",
    "latest_tested_versions": [
        "On prem v7.0.4"
    ],
    "min_phantom_version": "4.9.39220",
    "python_version": "3",
    "logo": "logo_panorama.svg",
    "logo_dark": "logo_panorama_dark.svg",
    "license": "Copyright (c) 2016-2021 Splunk Inc.",
    "configuration": {
        "device": {
            "description": "Device IP/Hostname",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "verify_server_cert": {
            "description": "Verify server certificate",
            "data_type": "boolean",
            "order": 1,
            "default": true
        },
        "username": {
            "description": "Username",
            "data_type": "string",
            "required": true,
            "order": 2
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "required": true,
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity",
            "verbose": "This action logs into the device using a REST Api call to check the connection and credentials configured.",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "block url",
            "description": "Block an URL",
            "verbose": "This action does the following to block a URL:<ul><li>Create an URL Filtering profile object named '<b>Phantom URL List for [device_group]</b>' containing the URL to block.</br>If the profile is already present, then it will be updated to include the URL to block.</li><li>Re-Configure the policy (specified in the <b>policy_name</b> parameter) to use the created URL Filtering profile.</br>If the policy is not found on the device, the action will return an error.</li><li>The action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul>",
            "type": "contain",
            "identifier": "block_url",
            "read_only": false,
            "parameters": {
                "url": {
                    "description": "URL to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "url"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 2,
                    "required": true,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 3,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "column_name": "URL",
                    "column_order": 0,
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Block Url",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock url",
            "description": "Unblock an URL",
            "verbose": "This action will remove the URL from the URL Filtering profile that was created/updated in the <b>block url</b> action. The action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.",
            "type": "correct",
            "identifier": "unblock_url",
            "read_only": false,
            "parameters": {
                "url": {
                    "description": "URL to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "url"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "column_name": "URL",
                    "column_order": 0,
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Unblock Url",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "block application",
            "description": "Block an application",
            "verbose": "This action does the following to block an application:<ul><li>Create an Application group named '<b>Phantom App List for [device_group]</b>' containing the application to block.</br>If the group is already present, then it will be updated to include the application.</li><li>Re-Configure the policy (specified in the <b>policy_name</b> parameter) to use the created application group.</br>If the policy is not found on the device, the action will return an error.</li><li>The action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul>To get a list of applications that can be blocked, execute the <b>list applications</b> action.",
            "type": "contain",
            "identifier": "block_application",
            "read_only": false,
            "parameters": {
                "application": {
                    "description": "Application to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "network application"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 2,
                    "required": true,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 3,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Block Application"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock application",
            "description": "Unblock an application",
            "verbose": "This action will remove the application from the Application group that was created/updated in the <b>block application</b> action. The action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.<br>Note: This action will pass for any non-existing application name as API doesn't return an error for an incorrect application name.",
            "type": "correct",
            "identifier": "unblock_application",
            "read_only": false,
            "parameters": {
                "application": {
                    "description": "Application to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "network application"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Unblock Application"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "block ip",
            "description": "Block an IP",
            "verbose": "<p>This action uses a multistep approach to block an IP.  The approach differs whether <b>is_source_address</b> is true or not.  By default, it is false.  The procedure is as follows:</p><ul><li>Create an address entry named '<b>[ip_address] Added By Phantom</b>' with the specified IP address<li>The container id of the phantom action is added as a tag to the address entry when it's created<li>If <b>is_source_address</b> is false:<ul><li> add this entry to an address group called <b>Phantom Network List for [device_group]</b></li><li>The address entry and group will be created in the device group specified in the <b>device_group</b> parameter</li><li>configure the address group as a <i>destination</i> to the policy specified in the <b>policy_name</b> parameter</li></ul>If <b>is_source_address</b> is true:<ul><li>add this entry to an address group called <b>PhantomNtwrkSrcLst[device_group]</b></li><li>The address entry and group will be created in the device group specified in the <b>device_group</b> parameter</li><li>configure the address group as a <i>source</i> to the policy specified in the <b>policy_name</b> parameter</ul><b>Note:</b> If the policy is not found on the device, the action will return an error.<li>The action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul><p><b>Please Note:</b> If the Panorama Policy that is used to block a source or destination address has 'Any' in the Source Address or Destination Address field, Block IP will succeed but it will not work.  Therefore, make sure that the policy that the address group will be appended to has no 'Any' in the field that you are blocking from.  i.e, if you are blocking an IP from source, make sure the policy does not have 'Any' under Source Address.</p><p>The address group name is limited to 32 characters.  The device group chosen will be appended to the address group name created.  If the resulting name is too long, the name will be trimmed, which may result in clipped or unusual names.  This is as intended, as it is a limitation by Panorama.",
            "type": "contain",
            "identifier": "block_ip",
            "read_only": false,
            "parameters": {
                "ip": {
                    "description": "IP to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "ip"
                    ],
                    "primary": true,
                    "required": true
                },
                "is_source_address": {
                    "description": "Source address",
                    "data_type": "boolean",
                    "order": 1
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 2,
                    "required": true
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 3,
                    "required": true,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 4,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 0,
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.parameter.is_source_address",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Block Ip",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock ip",
            "description": "Unblock an IP",
            "verbose": "This action will remove the address entry from the Address group that was created/updated in the <b>block ip</b> action.  This action behaves differently based upon whether <b>is_source_address</b> is true or false.  By default, it is false.<br>If <b>is_source_address</b> is false:<ul><li>The given IP address will be removed from the <b>Phantom Network List for [device_group]</b> Address Group.</li></ul>If <b>is_source_address</b> is true:<ul><li>The given IP address will be removed from the <b>PhantomNtwrkSrcLst[device_group]</b> Address Group.</li></ul>The action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.",
            "type": "correct",
            "identifier": "unblock_ip",
            "read_only": false,
            "parameters": {
                "ip": {
                    "description": "IP to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "ip"
                    ],
                    "primary": true,
                    "required": true
                },
                "is_source_address": {
                    "description": "Source address",
                    "data_type": "boolean",
                    "order": 1
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 2,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 0,
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.is_source_address",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Unblock Ip",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list applications",
            "description": "List the applications that the device knows about and can block",
            "type": "investigate",
            "identifier": "list_apps",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.data.*.category",
                    "data_type": "string",
                    "column_name": "Category",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.has-known-vulnerability",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.used-by-malware",
                    "data_type": "string",
                    "column_name": "Used By Malware",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.@ori_country",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.consume-big-bandwidth",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.able-to-transfer-file",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.technology",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.pervasive-use",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@ori_lauguage",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.subcategory",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.prone-to-misuse",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.evasive-behavior",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.link",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.@name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk",
                    "data_type": "string",
                    "column_name": "Risk",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.application-container",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.*.link",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.*.@name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-type-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.virus-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.implicit-use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.udp-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.ident-by-ip-protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-forward",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ottawa-name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.implicit-use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.breaks-decryption",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.related-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.child",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.analysis",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.not-support-ssl",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.enable-url-filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.threshold",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.interval",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.track-by.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rule-match",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.interval",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.key-by.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tcp-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ident-by-dport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-forward",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ident-by-sport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.preemptive",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.*.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.netx-vmotion",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ha-safe",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.doc-review",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.*.ident-by-ip-protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.*.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.udp-discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.ident-by-icmp-type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.deprecated",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.alg-disable-capability",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tcp-discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values":[
                        "Total applications: 2421"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_applications",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]

                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Application List"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "description": "Run a query on Panorama",
            "verbose": "This action runs a query on Panorama and returns the set of logs matching the search criteria.<br><br>Use the <b>range</b> parameter to limit the number of logs returned by the action. If no range is given, the action will use the range <b>1-5000</b>. The action can retrieve up to a maximum of 5000 logs. If more logs need to be retrieved, rerun the action with the next sequential range of values.<br><br>The <b>log_type</b> parameter can be one of the following:<ul><li><b>traffic</b> - traffic logs</li><li><b>url</b> - URL filtering logs</li><li><b>data</b> - data filtering logs</li><li><b>threat</b> - threat logs</li><li><b>config</b> - config logs</li><li><b>system</b> - system logs</li><li><b>hipmatch</b> - HIP match logs</li><li><b>wildfire</b> - wildfire logs</li><li><b>corr</b> - correlated event logs</li><li><b>corr-categ</b> - correlated events by category</li><li><b>corr-detail</b> - correlated event details.</li></ul>",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "parameters": {
                "log_type": {
                    "description": "Log type to query",
                    "data_type": "string",
                    "order": 0,
                    "default": "traffic",
                    "value_list": [
                        "traffic",
                        "url",
                        "corr",
                        "data",
                        "threat",
                        "config",
                        "system",
                        "hipmatch",
                        "wildfire",
                        "corr-categ",
                        "corr-detail"
                    ],
                    "required": true
                },
                "query": {
                    "description": "Query to run",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "range": {
                    "description": "Range of result logs to retrieve (e.g 1-5000 or 100-700)",
                    "data_type": "string",
                    "order": 2
                },
                "direction": {
                    "description": "Direction to search",
                    "data_type": "string",
                    "default": "backward",
                    "value_list": [
                        "backward",
                        "forward"
                    ],
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "example_values": [
                        "( port.dst eq 161 )"
                    ]
                },
                {
                    "data_path": "action_result.parameter.log_type",
                    "data_type": "string",
                    "example_values": [
                        "traffic"
                    ]
                },
                {
                    "data_path": "action_result.parameter.direction",
                    "data_type": "string",
                    "example_values": [
                        "backward"
                    ]
                },
                {
                    "data_path": "action_result.parameter.range",
                    "data_type": "string",
                    "example_values": [
                        "1-5000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.id",
                    "data_type": "string",
                    "example_values": [
                        "1316"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "15:46:37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "15:46:37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tlast",
                    "data_type": "string",
                    "example_values": [
                        "16:00:00"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.cached-logs",
                    "data_type": "string",
                    "example_values": [
                        "21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.to",
                    "data_type": "string",
                    "example_values": [
                        "Internal Zone"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.app",
                    "data_type": "string",
                    "example_values": [
                        "snmp-base"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dst",
                    "data_type": "string",
                    "column_name": "Destination IP",
                    "column_order": 3,
                    "example_values": [
                        "10.18.3.2"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.src",
                    "data_type": "string",
                    "column_name": "Source IP",
                    "column_order": 1,
                    "example_values": [
                        "10.10.0.18"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.from",
                    "data_type": "string",
                    "example_values": [
                        "Internal Zone"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.rule",
                    "data_type": "string",
                    "example_values": [
                        "Phantom URL Security Policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.type",
                    "data_type": "string",
                    "example_values": [
                        "TRAFFIC"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.vsys",
                    "data_type": "string",
                    "example_values": [
                        "vsys1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes",
                    "data_type": "string",
                    "example_values": [
                        "79"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dport",
                    "data_type": "string",
                    "column_name": "Destination Port",
                    "column_order": 4,
                    "example_values": [
                        "161"
                    ],
                    "contains": [
                        "port"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flags",
                    "data_type": "string",
                    "example_values": [
                        "0x64"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.proto",
                    "data_type": "string",
                    "example_values": [
                        "udp"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.seqno",
                    "data_type": "string",
                    "example_values": [
                        "1715"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sport",
                    "data_type": "string",
                    "column_name": "Source Port",
                    "column_order": 2,
                    "example_values": [
                        "64453"
                    ],
                    "contains": [
                        "port"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.start",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.@logid",
                    "data_type": "string",
                    "example_values": [
                        "7592"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.domain",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ],
                    "contains": [
                        "domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dstloc",
                    "data_type": "string",
                    "example_values": [
                        "10.0.0.0-10.255.255.255"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.logset",
                    "data_type": "string",
                    "example_values": [
                        "Forward all logs from DG2"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.serial",
                    "data_type": "string",
                    "example_values": [
                        "007200000031753"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.srcloc",
                    "data_type": "string",
                    "example_values": [
                        "10.0.0.0-10.255.255.255"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.elapsed",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.packets",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.padding",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pbf-c2s",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pbf-s2c",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.subtype",
                    "data_type": "string",
                    "example_values": [
                        "end"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.vsys_id",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.category",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.cpadding",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-nat",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.natdport",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.natsport",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-pcap",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pkts_sent",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.repeatcnt",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sessionid",
                    "data_type": "string",
                    "column_name": "Session ID",
                    "column_order": 0,
                    "example_values": [
                        "58"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes_sent",
                    "data_type": "string",
                    "example_values": [
                        "79"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.config_ver",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-proxy",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.inbound_if",
                    "data_type": "string",
                    "example_values": [
                        "ethernet1/1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sym-return",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.actionflags",
                    "data_type": "string",
                    "example_values": [
                        "0x8000000000000000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.device_name",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.outbound_if",
                    "data_type": "string",
                    "example_values": [
                        "ethernet1/1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.transaction",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-flagged",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.receive_time",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:54"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.action_source",
                    "data_type": "string",
                    "example_values": [
                        "from-policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.non-std-dport",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pkts_received",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.time_received",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes_received",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.captive-portal",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.decrypt-mirror",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.time_generated",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_1",
                    "data_type": "string",
                    "example_values": [
                        "17"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_2",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_3",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_4",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-url-denied",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.temporary-match",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.session_end_reason",
                    "data_type": "string",
                    "example_values": [
                        "aged-out"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.@count",
                    "data_type": "string",
                    "example_values": [
                        "21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.@progress",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Num logs: 1"
                    ]
                },
                {
                    "data_path": "action_result.summary.num_logs",
                    "data_type": "numeric",
                    "example_values": [
                        21
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Query"
            },
            "versions": "EQ(*)"
        }
    ]
}
