{
    "appid": "069cbeb1-a1c7-429f-b9e8-5a02bafe6daf",
    "name": "AWS Lambda",
    "description": "This app integrates with AWS Lambda to perform lambda functions",
    "type": "devops",
    "product_vendor": "AWS",
    "logo": "logo_aws.svg",
    "logo_dark": "logo_aws_dark.svg",
    "product_name": "Lambda",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) 2019-2021 Splunk Inc.",
    "app_version": "2.0.0",
    "utctime_updated": "2021-01-29T18:54:49.000000Z",
    "package_name": "phantom_awslambda",
    "main_module": "awslambda_connector.py",
    "min_phantom_version": "4.9.39220",
    "python_version": "3",
    "latest_tested_versions": [
        "Cloud API, February 25, 2021"
    ],
    "app_wizard_version": "1.0.0",
    "pip_dependencies": {
        "wheel": [
            {
                "module": "boto3",
                "input_file": "wheels/boto3-1.10.31-py2.py3-none-any.whl"
            },
            {
                "module": "s3transfer",
                "input_file": "wheels/s3transfer-0.2.0-py2.py3-none-any.whl"
            },
            {
                "module": "botocore",
                "input_file": "wheels/botocore-1.13.31-py2.py3-none-any.whl"
            },
            {
                "module": "futures",
                "input_file": "wheels/futures-3.2.0-py2-none-any.whl"
            },
            {
                "module": "docutils",
                "input_file": "wheels/docutils-0.16-py2.py3-none-any.whl"
            },
            {
                "module": "jmespath",
                "input_file": "wheels/jmespath-0.9.3-py2.py3-none-any.whl"
            }
        ]
    },
    "pip3_dependencies": {
        "wheel": [
            {
                "module": "boto3",
                "input_file": "wheels/boto3-1.10.31-py2.py3-none-any.whl"
            },
            {
                "module": "s3transfer",
                "input_file": "wheels/s3transfer-0.2.0-py2.py3-none-any.whl"
            },
            {
                "module": "botocore",
                "input_file": "wheels/botocore-1.13.31-py2.py3-none-any.whl"
            },
            {
                "module": "docutils",
                "input_file": "wheels/docutils-0.16-py2.py3-none-any.whl"
            },
            {
                "module": "jmespath",
                "input_file": "wheels/jmespath-0.9.3-py2.py3-none-any.whl"
            }
        ]
    },
    "configuration": {
        "access_key": {
            "description": "Access Key",
            "data_type": "password",
            "order": 0
        },
        "secret_key": {
            "description": "Secret Key",
            "data_type": "password",
            "order": 1
        },
        "region": {
            "description": "Default Region",
            "data_type": "string",
            "required": true,
            "value_list": [
                "US East (Ohio)",
                "US East (N. Virginia)",
                "US West (N. California)",
                "US West (Oregon)",
                "Asia Pacific (Mumbai)",
                "Asia Pacific (Seoul)",
                "Asia Pacific (Singapore)",
                "Asia Pacific (Sydney)",
                "Asia Pacific (Tokyo)",
                "Canada (Central)",
                "China (Beijing)",
                "China (Ningxia)",
                "EU (Frankfurt)",
                "EU (Ireland)",
                "EU (London)",
                "EU (Paris)",
                "EU (Stockholm)",
                "South America (Sao Paulo)",
                "AWS GovCloud (US-East)",
                "AWS GovCloud (US)"
            ],
            "order": 2
        },
        "use_role": {
            "description": "Use attached role when running Phantom in EC2",
            "data_type": "boolean",
            "default": false,
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "remove permission",
            "identifier": "remove_permission",
            "description": "Revokes function-use permission from an AWS service or another account",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "function_name": {
                    "description": "The name of the Lambda function, version, or alias. The following name formats are accepted: function name, function ARN, and partial ARN",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "lambda function name",
                        "lambda function arn"
                    ],
                    "order": 0
                },
                "statement_id": {
                    "description": "Statement identifier of the permission to remove",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "qualifier": {
                    "description": "Specify a version or alias to remove permissions to a published version of the function",
                    "data_type": "string",
                    "order": 2
                },
                "revision_id": {
                    "description": "Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a function policy that has changed since you last read it",
                    "data_type": "string",
                    "order": 3
                },
                "credentials": {
                    "description": "Assumed role credentials",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "aws credentials"
                    ],
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "50c47f67-ae1a-4c2a-9651-77f1ba1f3d37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Fri, 26 Feb 2021 19:07:37 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.connection",
                    "data_type": "string",
                    "example_values": [
                        "keep-alive"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "application/json"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-requestid",
                    "data_type": "string",
                    "example_values": [
                        "50c47f67-ae1a-4c2a-9651-77f1ba1f3d37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        204
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ],
                    "column_name": "Status",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully removed permission"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully removed permission"
                    ]
                },
                {
                    "data_path": "action_result.parameter.function_name",
                    "data_type": "string",
                    "contains": [
                        "lambda function name",
                        "lambda function arn"
                    ],
                    "example_values": [
                        "myTestFunction1"
                    ],
                    "column_name": "Function Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.statement_id",
                    "data_type": "string",
                    "example_values": [
                        "statement1"
                    ],
                    "column_name": "Statement Id",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.qualifier",
                    "data_type": "string",
                    "column_name": "Qualifier",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.revision_id",
                    "data_type": "string",
                    "column_name": "Revision Id",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.credentials",
                    "data_type": "string",
                    "example_values": [
                        "{'AccessKeyId': 'ASIASJL6ZZZZZ3M7QC2J', 'Expiration': '2020-12-09 22:28:04', 'SecretAccessKey': 'ZZZZZAmvLPictcVBPvjJx0d7MRezOuxiLCMZZZZZ', 'SessionToken': 'ZZZZZXIvYXdzEN///////////wEaDFRU0s4AVrw0k0oYICK4ATAzOqzAkg9bHY29lYmP59UvVOHjLufOy4s7SnAzOxGqGIXnukLis4TWNhrJl5R5nYyimrm6K/9d0Cw2SW9gO0ZRjEJHWJ+yY5Qk2QpWctS2BGn4n+G8cD6zEweCCMj+ScI5p8n7YI4wOdvXvOsVMmjV6F09Ujqr1w+NwoKXlglznXGs/7Q1kNZOMiioEhGUyoiHbQb37GCKslDK+oqe0KNaUKQ96YCepaLgMbMquDgdAM8I0TTxUO0o5ILF/gUyLT04R7QlOfktkdh6Qt0atTS+xeKi1hirKRizpJ8jjnxGQIikPRToL2v3ZZZZZZ=='}"
                    ],
                    "contains": [
                        "aws credentials"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)",
            "render": {
                "type": "table"
            }
        },
        {
            "action": "invoke lambda",
            "identifier": "invoke_lambda",
            "description": "Invoke an AWS Lambda function",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "function_name": {
                    "description": "The name of the AWS Lambda function, version, or alias. The following name formats are accepted: function name, function ARN, and partial ARN",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "lambda function name",
                        "lambda function arn"
                    ],
                    "order": 0
                },
                "invocation_type": {
                    "description": "Invocation type",
                    "data_type": "string",
                    "value_list": [
                        "RequestResponse",
                        "Event",
                        "DryRun"
                    ],
                    "default": "RequestResponse",
                    "order": 1
                },
                "log_type": {
                    "description": "Set to 'Tail' to include the execution log in the response",
                    "data_type": "string",
                    "value_list": [
                        "None",
                        "Tail"
                    ],
                    "default": "None",
                    "order": 2
                },
                "client_context": {
                    "description": "The JSON that you want to provide to your Lambda function in the context object",
                    "data_type": "string",
                    "order": 3
                },
                "payload": {
                    "description": "The JSON that you want to provide to your Lambda function as input",
                    "data_type": "string",
                    "order": 4
                },
                "qualifier": {
                    "description": "Specify a version or alias to invoke a published version of the function",
                    "data_type": "string",
                    "order": 5
                },
                "credentials": {
                    "description": "Assumed role credentials",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "aws credentials"
                    ],
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.client_context",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.credentials",
                    "data_type": "string",
                    "example_values": [
                        "{'AccessKeyId': 'ASIASJL6ZZZZZ3M7QC2J', 'Expiration': '2020-12-09 22:28:04', 'SecretAccessKey': 'ZZZZZAmvLPictcVBPvjJx0d7MRezOuxiLCMZZZZZ', 'SessionToken': 'ZZZZZXIvYXdzEN///////////wEaDFRU0s4AVrw0k0oYICK4ATAzOqzAkg9bHY29lYmP59UvVOHjLufOy4s7SnAzOxGqGIXnukLis4TWNhrJl5R5nYyimrm6K/9d0Cw2SW9gO0ZRjEJHWJ+yY5Qk2QpWctS2BGn4n+G8cD6zEweCCMj+ScI5p8n7YI4wOdvXvOsVMmjV6F09Ujqr1w+NwoKXlglznXGs/7Q1kNZOMiioEhGUyoiHbQb37GCKslDK+oqe0KNaUKQ96YCepaLgMbMquDgdAM8I0TTxUO0o5ILF/gUyLT04R7QlOfktkdh6Qt0atTS+xeKi1hirKRizpJ8jjnxGQIikPRToL2v3ZZZZZZ=='}"
                    ],
                    "contains": [
                        "aws credentials"
                    ]
                },
                {
                    "data_path": "action_result.parameter.function_name",
                    "data_type": "string",
                    "contains": [
                        "lambda function name",
                        "lambda function arn"
                    ],
                    "example_values": [
                        "parsePhantomRegistrationEmail",
                        "arn:aws:lambda:us-east-1:123456789012:function:example_helloworld"
                    ]
                },
                {
                    "data_path": "action_result.parameter.invocation_type",
                    "data_type": "string",
                    "example_values": [
                        "RequestResponse"
                    ]
                },
                {
                    "data_path": "action_result.parameter.log_type",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.parameter.payload",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.qualifier",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ExecutedVersion",
                    "data_type": "string",
                    "example_values": [
                        "$LATEST"
                    ]
                },
                {
                    "data_path": "action_result.data.*.FunctionError",
                    "data_type": "string",
                    "example_values": [
                        "Unhandled"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Payload",
                    "data_type": "string",
                    "example_values": [
                        "Success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Payload.errorMessage",
                    "data_type": "string",
                    "example_values": [
                        "'input_text'"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Payload.errorType",
                    "data_type": "string",
                    "example_values": [
                        "KeyError"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Payload.stackTrace.*",
                    "data_type": "string",
                    "example_values": [
                        "input_text = event[\"input_text\"]"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Payload.statusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.connection",
                    "data_type": "string",
                    "example_values": [
                        "keep-alive"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                    "data_type": "string",
                    "example_values": [
                        "167",
                        "9"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "application/json"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Tue, 19 Feb 2019 21:17:06 GMT",
                        "Tue, 19 Feb 2019 21:26:49 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-executed-version",
                    "data_type": "string",
                    "example_values": [
                        "$LATEST"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-function-error",
                    "data_type": "string",
                    "example_values": [
                        "Unhandled"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-remapped-content-length",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-requestid",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-trace-id",
                    "data_type": "string",
                    "example_values": [
                        "root=1-abcd1234-abcdfghi123456789abcd;sampled=0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.StatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully invoked lambda"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully invoked lambda"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 10,
                "title": "Add Network Security Group",
                "view": "awslambda_view.display_invoke"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list functions",
            "identifier": "list_functions",
            "description": "List available AWS Lambda functions, with the version-specific configuration for each",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "function_version": {
                    "description": "Set to 'ALL' to include entries for all published versions of each function",
                    "data_type": "string",
                    "order": 0
                },
                "next_token": {
                    "description": "Specify the pagination token returned by previous request to retrieve next page of results",
                    "data_type": "string",
                    "contains": [
                        "lambda next token"
                    ],
                    "primary": true,
                    "order": 1
                },
                "max_items": {
                    "description": "A value between 1 and 50 to limit the number of functions to be returned",
                    "data_type": "numeric",
                    "order": 2
                },
                "credentials": {
                    "description": "Assumed role credentials",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "aws credentials"
                    ],
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.credentials",
                    "data_type": "string",
                    "example_values": [
                        "{'AccessKeyId': 'ASIASJL6ZZZZZ3M7QC2J', 'Expiration': '2020-12-09 22:28:04', 'SecretAccessKey': 'ZZZZZAmvLPictcVBPvjJx0d7MRezOuxiLCMZZZZZ', 'SessionToken': 'ZZZZZXIvYXdzEN///////////wEaDFRU0s4AVrw0k0oYICK4ATAzOqzAkg9bHY29lYmP59UvVOHjLufOy4s7SnAzOxGqGIXnukLis4TWNhrJl5R5nYyimrm6K/9d0Cw2SW9gO0ZRjEJHWJ+yY5Qk2QpWctS2BGn4n+G8cD6zEweCCMj+ScI5p8n7YI4wOdvXvOsVMmjV6F09Ujqr1w+NwoKXlglznXGs/7Q1kNZOMiioEhGUyoiHbQb37GCKslDK+oqe0KNaUKQ96YCepaLgMbMquDgdAM8I0TTxUO0o5ILF/gUyLT04R7QlOfktkdh6Qt0atTS+xeKi1hirKRizpJ8jjnxGQIikPRToL2v3ZZZZZZ=='}"
                    ],
                    "contains": [
                        "aws credentials"
                    ]
                },
                {
                    "data_path": "action_result.parameter.function_version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.max_items",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.parameter.next_token",
                    "data_type": "string",
                    "contains": [
                        "lambda next token"
                    ],
                    "example_values": [
                        "1234abcd12abab12ab12123456abcdef/c3sgqk3eiDRMkct7D8EmptWfHSXssPdS7Bo66iQPTMpVOHZgANewpgGgFGGr4pVjd6VgLUO6qPe1234abcd12abab12ab12123456abcdef/m0k5qVzizwoxFwvyruMbuMx9kADFACSslcabxXl3/jDI4rfFnIsUVdzTLBgPF1hzwrE1f3lcdkBvUp+QgY+Pn3w5QuJmwsp/di8COzFemY89GgOHbLNqsrBsgR/ee2eXoJp0ZkKM4EcBK3HokqBzefLfgR02PnfNOdXwqTlhkSPW0TKiKGIYu3Bw7lSNrLd+q3+wBGNLTnq7RWa21Xjxe5me9SyEscOWAwjnLEf9QpeMhWc+Qq9u3+IYyk7smjCWpIY371RST1llX0KIVaZkBn+agQ6cVvSAmBrKVEdtAzHROaivow8IdH2YG8FxvGmI5HkwSTf60OBM3jFrxw7v5OjCoId/ao6LBGYkuSAPF6YvgvwBdpgZeRmXfx9Iop3eaCNyLeGtKzLqVSOUwazScYgfAk="
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.CodeSha256",
                    "data_type": "string",
                    "example_values": [
                        "abcdEFG123456ABCDefghijk12345678abDE="
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.CodeSize",
                    "data_type": "numeric",
                    "example_values": [
                        279
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.Description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Functions.*.FunctionArn",
                    "data_type": "string",
                    "contains": [
                        "lambda function arn"
                    ],
                    "example_values": [
                        "arn:aws:lambda:us-east-1:123456789012:function:demo9"
                    ],
                    "column_name": "Function Arn",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.Functions.*.FunctionName",
                    "data_type": "string",
                    "contains": [
                        "lambda function name"
                    ],
                    "example_values": [
                        "demo9"
                    ],
                    "column_name": "Function Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.Functions.*.Handler",
                    "data_type": "string",
                    "example_values": [
                        "lambda_function.lambda_handler"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.LastModified",
                    "data_type": "string",
                    "example_values": [
                        "2019-03-05T09:59:00.351+0000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.MemorySize",
                    "data_type": "numeric",
                    "example_values": [
                        128
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.RevisionId",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.Role",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:iam::123456789012:role/service-role/test-role"
                    ],
                    "column_name": "Role",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.Functions.*.Runtime",
                    "data_type": "string",
                    "example_values": [
                        "ruby2.5"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.Timeout",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.TracingConfig.Mode",
                    "data_type": "string",
                    "example_values": [
                        "PassThrough"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.Version",
                    "data_type": "string",
                    "example_values": [
                        "$LATEST"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Functions.*.VpcConfig.VpcId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.NextMarker",
                    "data_type": "string",
                    "contains": [
                        "lambda next token"
                    ],
                    "example_values": [
                        "abcdEFG123456ABCDefghijk12345678abDE/c3sgqk3eiDRMkct7D8EmptWfHSXssPdS7Bo66iQPTMpVOabcdEFG123456ABCDefghijk12345678abDELUO6qPe2EMAuNDBjUTxm8z6N28yhlUwEmKbrAV/abcdEFG123456ABCDefghijk12345678abDE/jDI4rfFnIsUVdzTLBgPF1hzwrE1f3lcdkBvUp+QgY+Pn3w5QuJmwsp/abcdEFG123456ABCDefghijk12345678abDE/ee2eXoJp0ZkKM4EcBK3HokqBzefLfgR02PnfNOdXwqTlhkSPW0TKiKGIYu3Bw7lSNrLd+q3+wBGNLTnq7RWa21Xjxe5me9SyEscOWAwjnLEf9QpeMhWc/irQe4ijLbCnEZbkbt3hmecsTkxYE/lu3VsPd27PAdH4m+u1lfY5PZHNIkqx2ocEw2Ya797ov+QmFZmKBzimXcyNnbWoE7Hp+nZOKcr2BiQK9SSuBCi2Y/wi1dQ0S5F0u/cv42hTH+ak59mYaNJQOl9NZ+wWD72kMC9GUEYigQs="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.connection",
                    "data_type": "string",
                    "example_values": [
                        "keep-alive"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                    "data_type": "string",
                    "example_values": [
                        "1925"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "application/json"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Fri, 08 Mar 2019 01:20:14 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-requestid",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.summary.next_token",
                    "data_type": "string",
                    "contains": [
                        "lambda next token"
                    ],
                    "example_values": [
                        "1234abcd12abab12ab12123456abcdef/c3sgqk3eiDRMkct7D8EmptWfHSXssPdS7Bo66iQPTMpVOHZgANewpgGgFGGr4pVjd6Vg1234abcd12abab12ab12123456abcdef/m0k5qVzizwoxFwvyruMbuMx9kADFACSslcabxXl3/jDI4rfFnIsUVdzTLBgPF1hzwrE1f3lcdkBvUp+QgY+Pn3w5QuJmwsp/di8COzFemY89GgOHbLNqsrBsgR/ee2eXoJp0ZkKM4EcBK3HokqBzefLfgR02PnfNOdXwqTlhkSPW0TKiKGIYu3Bw7lSNrLd+q3+wBGNLTnq7RWa21Xjxe5me9SyEscOWAwjnLEf9QpeMhWc/irQe4ijLbCnEZbkbt3hmecsTkxYE/lu3VsPd27PAdH4m+u1lfY5PZHNIkqx2ocEw2Ya797ov+QmFZmKBzimXcyNnbWoE7Hp+nZOKcr2BiQK9SSuBCi2Y/wi1dQ0S5F0u/cv42hTH+ak59mYaNJQOl9NZ+wWD72kMC9GUEYigQs="
                    ]
                },
                {
                    "data_path": "action_result.summary.num_functions",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Next token: 1234abcd12abab12ab12123456abcdef/c3sgqk3eiDRMkct7D8EmptWfHSXssPdS7Bo1234abcd-12ab-ab12-ab12-123456abcdefuNDBjUTxm8z6N28yhlUwEmKbrAV/m0k5qVzizwoxFwvyruMbuMx9kADFACSslcabxXl3/jDI4rfFnIsUVdzTLBgPF1hzwrE1f3lcdkBvUp+QgY+Pn3w5QuJmwsp/di8COzFemY89GgOHbLNqsrBsgR/ee2eXoJp0ZkKM4EcBK3HokqBzefLfgR02PnfNOdXwqTlhkSPW0TKiKGIYu3Bw7lSNrLd+q3+wBGNLTnq7RWa21Xjxe5me9SyEscOWAwjnLEf9QpeMhWc/irQe4ijLbCnEZbkbt3hmecsTkxYE/lu3VsPd27PAdH4m+u1lfY5PZHNIkqx2ocEw2Ya797ov+QmFZmKBzimXcyNnbWoE7Hp+nZOKcr2BiQK9SSuBCi2Y/wi1dQ0S5F0u/cv42hTH+ak59mYaNJQOl9NZ+wWD72kMC9GUEYigQs=, Num functions: 1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add permission",
            "identifier": "add_permission",
            "undo": "remove permission",
            "description": "Grants an AWS service or another account permission to use a function",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "function_name": {
                    "description": "The name of the Lambda function, version, or alias. The following name formats are accepted: function name, function ARN, and partial ARN",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "lambda function name",
                        "lambda function arn"
                    ],
                    "order": 0
                },
                "statement_id": {
                    "description": "A statement identifier that differentiates the statement from others in the same policy",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "action": {
                    "description": "The action that the principal can use on the function. For example, lambda:InvokeFunction or lambda:GetFunction",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "principal": {
                    "description": "The AWS service or account that invokes the function. If you specify a service, use SourceArn or SourceAccount to limit who can invoke the function through that service",
                    "data_type": "string",
                    "required": true,
                    "order": 3
                },
                "source_arn": {
                    "description": "For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic",
                    "data_type": "string",
                    "order": 4
                },
                "source_account": {
                    "description": "For AWS services, the ID of the account that owns the resource. Use this instead of SourceArn to grant permission to resources that are owned by another account (for example, all of an account's Amazon S3 buckets). Or use it together with SourceArn to ensure that the resource is owned by the specified account. For example, an Amazon S3 bucket could be deleted by its owner and recreated by another account",
                    "data_type": "string",
                    "order": 5
                },
                "event_source_token": {
                    "description": "For Alexa Smart Home functions, a token that must be supplied by the invoker",
                    "data_type": "string",
                    "order": 6
                },
                "qualifier": {
                    "description": "Specify a version or alias to add permissions to a published version of the function",
                    "data_type": "string",
                    "order": 7
                },
                "revision_id": {
                    "description": "Only accepts the function's $LATEST revision ID. Use this option to avoid modifying a function policy that has changed since you last read it",
                    "data_type": "string",
                    "order": 8
                },
                "credentials": {
                    "description": "Assumed role credentials",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "aws credentials"
                    ],
                    "order": 9
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string",
                    "example_values": [
                        "lambda:InvokeFunction"
                    ]
                },
                {
                    "data_path": "action_result.parameter.credentials",
                    "data_type": "string",
                    "example_values": [
                        "{'AccessKeyId': 'ASIASJL6ZZZZZ3M7QC2J', 'Expiration': '2020-12-09 22:28:04', 'SecretAccessKey': 'ZZZZZAmvLPictcVBPvjJx0d7MRezOuxiLCMZZZZZ', 'SessionToken': 'ZZZZZXIvYXdzEN///////////wEaDFRU0s4AVrw0k0oYICK4ATAzOqzAkg9bHY29lYmP59UvVOHjLufOy4s7SnAzOxGqGIXnukLis4TWNhrJl5R5nYyimrm6K/9d0Cw2SW9gO0ZRjEJHWJ+yY5Qk2QpWctS2BGn4n+G8cD6zEweCCMj+ScI5p8n7YI4wOdvXvOsVMmjV6F09Ujqr1w+NwoKXlglznXGs/7Q1kNZOMiioEhGUyoiHbQb37GCKslDK+oqe0KNaUKQ96YCepaLgMbMquDgdAM8I0TTxUO0o5ILF/gUyLT04R7QlOfktkdh6Qt0atTS+xeKi1hirKRizpJ8jjnxGQIikPRToL2v3ZZZZZZ=='}"
                    ],
                    "contains": [
                        "aws credentials"
                    ]
                },
                {
                    "data_path": "action_result.parameter.event_source_token",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.function_name",
                    "data_type": "string",
                    "contains": [
                        "lambda function name",
                        "lambda function arn"
                    ],
                    "example_values": [
                        "example_helloworld"
                    ]
                },
                {
                    "data_path": "action_result.parameter.principal",
                    "data_type": "string",
                    "example_values": [
                        "s3.amazonaws.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.qualifier",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.revision_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_account",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_arn",
                    "data_type": "string",
                    "example_values": [
                        "arn:aws:lambda:us-east-1:123456789012:function:parseRegistrationEmailBase64"
                    ]
                },
                {
                    "data_path": "action_result.parameter.statement_id",
                    "data_type": "string",
                    "example_values": [
                        "ID-1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.connection",
                    "data_type": "string",
                    "example_values": [
                        "keep-alive"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                    "data_type": "string",
                    "example_values": [
                        "376",
                        "359"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "application/json"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Fri, 15 Feb 2019 20:15:51 GMT",
                        "Tue, 19 Feb 2019 22:31:11 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-requestid",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        201
                    ],
                    "column_name": "Status Code",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "1234abcd-12ab-ab12-ab12-123456abcdef"
                    ],
                    "column_name": "Request ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.Statement",
                    "data_type": "string",
                    "example_values": [
                        "{\"Sid\":\"ID-1\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"s3.amazonaws.com\"},\"Action\":\"lambda:InvokeFunction\",\"Resource\":\"arn:aws:lambda:us-east-1:123456789012:function:parseRegistrationEmailBase64\",\"Condition\":{\"ArnLike\":{\"AWS:SourceArn\":\"arn:aws:lambda:us-east-1:123456789012:function:parseRegistrationEmailBase64\"}}}",
                        "{\"Sid\":\"ID-1\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"s3.amazonaws.com\"},\"Action\":\"lambda:InvokeFunction\",\"Resource\":\"arn:aws:lambda:us-east-1:123456789012:function:example_helloworld\",\"Condition\":{\"ArnLike\":{\"AWS:SourceArn\":\"arn:aws:lambda:us-east-1:123456789012:function:parseRegistrationEmailBase64\"}}}"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully added permission"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully added permission"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}